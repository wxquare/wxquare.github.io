@startuml
title return&refund退款流程

actor User
participant hub_callback
participant api_server
participant internalapi
participant "Order Service" as OrderService
participant "item Service" as itemService

database "order db" as OrderDB


== fulfillment failed 履约失败触发的自动refund ==
hub_callback -> internalapi: /api/v1/fulfillment/status
internalapi -> OrderService: rpc.UpdateFulfillmentStatusProcessor
OrderService -> OrderDB: INSERT INTO `refund_tab`
OrderService -> OrderDB: update `refund_tab`R1 -> R2
OrderService -> OrderDB: update `order_tab` MR0 -> MR1    `fulfillment_status` = 'F7'
OrderService -> OrderDB: update `order_item_tab` `fulfillment_status` = 'F7'


== 用户主动 create return&refund ==
User -> api_server: /digital-product/api/refund/place  \n{ orderID: 123 }
api_server -> OrderService: rpc.PlaceRefundOrderProcessor
OrderService -> OrderDB: get order info. \n {SELECT * FROM `order_tab_00000601}
OrderService -> itemService: QueryReturnItemsProcessor
itemService -> hub: api/v2/orders/return/items \n {reference_id}
itemService <- hub: return with  \n {return_amount}
OrderService <- itemService: return with  \n {return_amount}
OrderService <- OrderService: Update order refund_status = MR1 \n INSERT INTO `refund_tab` \n INSERT INTO `refund_operation_log_tab`
OrderService -> MQ: push refund event
api_server <- OrderService: return
User <- api_server: return


== hub return callback ==
hub_callback -> internalapi: /order/hub/refund-notification  \n{ orderID: 123 }
internalapi -> itemService: rpc.HandlePendingReturnOrderProcessor
itemService -> hub: api/v1/orders/return
itemService -> OrderService: UpdatePurchaseReturnStatus

OrderService -> OrderDB: get order info. \n {SELECT * FROM `order_tab_00000601}
OrderService -> itemService: QueryReturnItemsProcessor
itemService -> hub: api/v2/orders/return/items \n {reference_id}
itemService <- hub: return with  \n {return_amount}
OrderService <- itemService: return with  \n {return_amount}
OrderService <- OrderService: Update order refund_status = MR1 \n INSERT INTO `refund_tab` \n INSERT INTO `refund_operation_log_tab`
OrderService -> MQ: push refund event
api_server <- OrderService: return
User <- api_server: return

@enduml
